using UnityEngine;
using System.Collections.Generic;

[RequireComponent(typeof(Pathfinder))]
public class HexGrid : MonoBehaviour {
    public GameObject hexPrefab;
    public int width = 20;
    public int height = 15;
    public float hexSize = 1.0f;
    public HexTile[,] grid;

    void Start() {
        GenerateGrid();
    }

    void GenerateGrid() {
        grid = new HexTile[width, height];
        for (int y = 0; y < height; y++) {
            for (int x = 0; x < width; x++) {
                Vector3 pos = new Vector3(
                    (x + y * 0.5f - y/2) * hexSize * 1.5f,
                    y * hexSize * 0.866f,
                    0
                );

                GameObject hexObj = Instantiate(hexPrefab, pos, Quaternion.identity, transform);
                HexTile tile = hexObj.GetComponent<HexTile>();
                tile.Init(x, y, (BiomeType)Random.Range(0, 4));
                grid[x, y] = tile;
            }
        }
    }

    public List<HexTile> GetNeighbors(HexTile tile) {
        List<HexTile> neighbors = new List<HexTile>();
        int[,] offsets = {
            { 1, 0 }, { -1, 0 }, { 0, 1 }, { 0, -1 },
            { (tile.y % 2 == 0) ? -1 : 1, 1 },
            { (tile.y % 2 == 0) ? -1 : 1, -1 }
        };

        for (int i = 0; i < offsets.GetLength(0); i++) {
            int nx = tile.x + offsets[i, 0];
            int ny = tile.y + offsets[i, 1];

            if (nx >= 0 && nx < width && ny >= 0 && ny < height) {
                neighbors.Add(grid[nx, ny]);
            }
        }
        return neighbors;
    }
}
